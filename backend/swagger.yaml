openapi: 3.0.0
info:
  title: API de Gestión de Usuarios, Pagos e Inventario
  version: 3.0.0
  description: API RESTful para la gestión de usuarios con roles, permisos, autenticación, sistema de pagos PayPal y gestión completa de inventario
  contact:
    name: Soporte API
    email: soporte@empresa.com

servers:
  - url: http://localhost:5000/api
    description: Servidor de desarrollo

tags:
  - name: Autenticación
    description: Endpoints de autenticación y autorización
  - name: Usuarios
    description: Operaciones relacionadas con usuarios
  - name: Sistema
    description: Endpoints del sistema
  - name: Pagos
    description: Sistema de pagos y gestión de órdenes
  - name: Administración
    description: Endpoints exclusivos para administradores
  - name: Preferencias
    description: Gestión de preferencias de usuario
  - name: Geolocalización
    description: Gestión de ubicación de usuarios
  - name: Biometría
    description: Autenticación biométrica con PIN
  - name: Inventario
    description: Sistema completo de gestión de inventario
  - name: Reportes
    description: Reportes y análisis del sistema

paths:
  /health:
    get:
      tags: [Sistema]
      summary: Health check del sistema
      description: Verifica que la API esté funcionando correctamente
      security: []
      responses:
        '200':
          description: API funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  message:
                    type: string
                    example: API funcionando correctamente
                  timestamp:
                    type: string
                    format: date-time
                    example: 2025-09-22T10:30:00.000Z
                  endpoints:
                    type: object
                    properties:
                      health:
                        type: string
                        example: /api/health
                      usuarios:
                        type: string
                        example: /api/usuarios
                      documentation:
                        type: string
                        example: /api-docs
                      inventario:
                        type: string
                        example: /api/inventario

  # =============================================
  # ENDPOINTS DE AUTENTICACIÓN
  # =============================================

  /auth/register:
    post:
      tags: [Autenticación]
      summary: Registrar nuevo usuario
      description: Registra un nuevo usuario en el sistema
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInput'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Error de validación o credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error de validación
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - El email es obligatorio
                      - La contraseña debe tener al menos 6 caracteres
        '409':
          description: Email ya registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: El email ya está registrado

  /auth/login:
    post:
      tags: [Autenticación]
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login exitoso - requiere verificación 2FA
          content:
            application/json:
              schema:
                type: object
                properties:
                  require2fa:
                    type: boolean
                    example: true
                  userId:
                    type: integer
                    example: 14
                  message:
                    type: string
                    example: Código OTP enviado a tu email
        '400':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Credenciales inválidas
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error de validación
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - El email es obligatorio
                      - La contraseña es obligatoria

  /auth/logout:
    post:
      tags: [Autenticación]
      summary: Cerrar sesión
      description: Cierra la sesión actual del usuario y elimina la sesión activa
      responses:
        '200':
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Sesión cerrada exitosamente
        '401':
          description: No autorizado

  /auth/session/check:
    get:
      tags: [Autenticación]
      summary: Verificar estado de sesión
      description: Verifica si el usuario tiene una sesión activa y su tiempo restante
      responses:
        '200':
          description: Estado de sesión obtenido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  sessionActive:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                      lastActivity:
                        type: string
                        format: date-time
                      expiresAt:
                        type: string
                        format: date-time
                      expiresIn:
                        type: integer
                        example: 55
                      timeLeft:
                        type: integer
                        example: 3300000
        '401':
          description: No autorizado

  /auth/session/force-logout:
    post:
      tags: [Autenticación, Administración]
      summary: Forzar cierre de sesión (Admin)
      description: Fuerza el cierre de sesión de un usuario específico (solo administradores)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Sesión forzada cerrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Sesión forzada cerrada para usuario@email.com
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: usuario@email.com
                      sessionRemoved:
                        type: boolean
                        example: true
        '403':
          description: Acceso denegado - Se requieren permisos de administrador
        '404':
          description: Usuario no encontrado

  /auth/session/stats:
    get:
      tags: [Autenticación, Administración]
      summary: Obtener estadísticas de sesiones (Admin)
      description: Retorna estadísticas de todas las sesiones activas (solo administradores)
      responses:
        '200':
          description: Estadísticas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalSessions:
                        type: integer
                        example: 10
                      activeSessions:
                        type: integer
                        example: 5
                      sessions:
                        type: array
                        items:
                          type: object
                          properties:
                            userId:
                              type: integer
                              example: 1
                            createdAt:
                              type: string
                              format: date-time
                            lastActivity:
                              type: string
                              format: date-time
                            expiresAt:
                              type: string
                              format: date-time
                            expiresIn:
                              type: integer
                              example: 55
                      lastUpdated:
                        type: string
                        format: date-time
        '403':
          description: Acceso denegado - Se requieren permisos de administrador

  /auth/2fa/verify:
    post:
      tags: [Autenticación]
      summary: Verificar código OTP
      description: Verifica el código de autenticación de dos factores
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerifyInput'
      responses:
        '200':
          description: OTP verificado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Código OTP inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Código OTP incorrecto
        '401':
          description: Token OTP expirado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token expirado
                  error:
                    type: string
                    example: El código OTP ha expirado
        '404':
          description: Token OTP incorrecto
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token incorrecto

  /auth/2fa/resend:
    post:
      tags: [Autenticación]
      summary: Reenviar código OTP
      description: Genera y envía un nuevo código OTP al usuario
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: integer
                  example: 14
      responses:
        '200':
          description: Nuevo código OTP enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Nuevo código OTP enviado exitosamente
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado

  /auth/forgot-password:
    post:
      tags: [Autenticación]
      summary: Solicitar recuperación de contraseña
      description: Envía un email con un token para recuperar la contraseña
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordInput'
      responses:
        '200':
          description: Email de recuperación enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Email de recuperación enviado exitosamente
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado

  /auth/reset-password:
    post:
      tags: [Autenticación]
      summary: Restablecer contraseña
      description: Restablece la contraseña usando el token de recuperación
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordInput'
      responses:
        '200':
          description: Contraseña restablecida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Contraseña restablecida exitosamente
        '400':
          description: Token inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token inválido
        '401':
          description: Token expirado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token expirado

  /auth/validate-token:
    post:
      tags: [Autenticación]
      summary: Validar token JWT
      description: Valida un token JWT y devuelve información sobre su estado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token válido
        '400':
          description: Token malformado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token malformado
        '401':
          description: Token expirado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token expirado

  /auth/me:
    get:
      tags: [Autenticación]
      summary: Obtener información del usuario actual
      description: Retorna la información del usuario autenticado
      responses:
        '200':
          description: Información del usuario obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Usuario'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: No autorizado

  /auth/google:
    get:
      tags: [Autenticación]
      summary: Iniciar autenticación con Google
      description: Redirige al usuario a Google para autenticación OAuth
      security: []
      responses:
        '302':
          description: Redirección a Google OAuth
        '400':
          description: Error en la configuración OAuth

  /auth/google/callback:
    get:
      tags: [Autenticación]
      summary: Callback de Google OAuth
      description: Maneja la respuesta de Google OAuth y redirige con token
      security: []
      parameters:
        - name: code
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
      responses:
        '302':
          description: Redirección al frontend con token JWT
        '401':
          description: Error en autenticación con Google

  # =============================================
  # ENDPOINTS DE USUARIOS
  # =============================================

  /usuarios:
    get:
      tags: [Usuarios]
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
                  total:
                    type: integer
                    example: 3
        '401':
          description: No autorizado

    post:
      tags: [Usuarios]
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Error de validación
        '401':
          description: No autorizado

  /usuarios/{id}:
    get:
      tags: [Usuarios]
      summary: Obtener usuario por ID
      description: Retorna un usuario específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
        '401':
          description: No autorizado

    put:
      tags: [Usuarios]
      summary: Actualizar usuario
      description: Actualiza la información de un usuario existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Error de validación
        '404':
          description: Usuario no encontrado
        '401':
          description: No autorizado

    delete:
      tags: [Usuarios]
      summary: Eliminar usuario
      description: Elimina un usuario del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado
        '401':
          description: No autorizado

  /usuarios/roles:
    get:
      tags: [Usuarios]
      summary: Obtener roles disponibles
      description: Retorna la lista de roles disponibles para los usuarios
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: string
                    example: [administrador, editor, usuario]
        '401':
          description: No autorizado

  /usuarios/estadisticas:
    get:
      tags: [Usuarios]
      summary: Obtener estadísticas de usuarios
      description: Retorna estadísticas generales sobre los usuarios
      responses:
        '200':
          description: Estadísticas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 15
                      activos:
                        type: integer
                        example: 12
                      inactivos:
                        type: integer
                        example: 3
                      por_rol:
                        type: object
                        example:
                          administrador: 2
                          editor: 5
                          usuario: 8
        '401':
          description: No autorizado

  /usuarios/cercanos:
    get:
      tags: [Usuarios]
      summary: Obtener usuarios cercanos
      description: Retorna usuarios dentro de un radio de 10km de la ubicación actual
      parameters:
        - name: radius
          in: query
          schema:
            type: number
            format: float
            default: 10
          description: Radio en kilómetros (opcional, default 10km)
      responses:
        '200':
          description: Usuarios cercanos obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
                  total:
                    type: integer
                    example: 5
        '401':
          description: No autorizado

  # =============================================
  # ENDPOINTS DE PAGOS
  # =============================================

  /pagos/productos:
    get:
      tags: [Pagos]
      summary: Obtener productos disponibles
      description: Retorna una lista de todos los productos activos disponibles para compra
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Producto'
        '500':
          description: Error interno del servidor

  /pagos/crear-orden:
    post:
      tags: [Pagos]
      summary: Crear nueva orden de PayPal
      description: Crea una nueva orden de compra y genera un enlace de pago de PayPal. El total se calcula automáticamente basado en los precios de los productos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrearOrdenInput'
      responses:
        '200':
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      orderId:
                        type: integer
                        example: 1
                      paypalOrderId:
                        type: string
                        example: "5O190127TN364715T"
                      approvalUrl:
                        type: string
                        example: "https://www.sandbox.paypal.com/checkoutnow?token=5O190127TN364715T"
                      total:
                        type: number
                        format: float
                        example: 279.97
        '400':
          description: Error en los datos de la orden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Producto con ID 5 no encontrado o no está disponible"
        '500':
          description: Error interno del servidor

  /pagos/callback-paypal:
    post:
      tags: [Pagos]
      summary: Callback de PayPal
      description: Endpoint llamado cuando PayPal redirige después del pago
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - paypalOrderId
              properties:
                paypalOrderId:
                  type: string
                  example: "5O190127TN364715T"
      responses:
        '200':
          description: Callback procesado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Orden recibida, será procesada por un administrador
                  orderId:
                    type: integer
                    example: 1
        '400':
          description: PayPal Order ID faltante
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Orden no encontrada
        '500':
          description: Error interno del servidor

  /pagos/ordenes:
    get:
      tags: [Pagos]
      summary: Obtener órdenes del usuario
      description: Retorna el historial de órdenes del usuario autenticado
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Número de página
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Límite de resultados por página
      responses:
        '200':
          description: Historial de órdenes obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Orden'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 15
                      pages:
                        type: integer
                        example: 2
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /pagos/ordenes/{orderId}:
    get:
      tags: [Pagos]
      summary: Obtener detalles de una orden específica
      description: Retorna los detalles completos de una orden específica del usuario
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Detalles de la orden obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Orden'
        '404':
          description: Orden no encontrada
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  # =============================================
  # ENDPOINTS DE ADMINISTRACIÓN
  # =============================================

  /pagos/admin/ordenes-pendientes:
    get:
      tags: [Administración, Pagos]
      summary: Obtener órdenes pendientes (Admin)
      description: Retorna todas las órdenes pendientes de procesamiento (solo administradores)
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Número de página
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Límite de resultados por página
      responses:
        '200':
          description: Órdenes pendientes obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrdenCompleta'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 20
                      total:
                        type: integer
                        example: 5
                      pages:
                        type: integer
                        example: 1
        '401':
          description: No autorizado
        '403':
          description: Acceso denegado - Se requieren permisos de administrador
        '500':
          description: Error interno del servidor

  /pagos/admin/verificar-orden:
    post:
      tags: [Administración, Pagos]
      summary: Verificar orden en PayPal (Admin)
      description: Verifica el estado actual de una orden en PayPal (solo administradores)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - paypalOrderId
              properties:
                paypalOrderId:
                  type: string
                  example: "5O190127TN364715T"
      responses:
        '200':
          description: Estado de la orden verificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "APPROVED"
                      paypalOrderId:
                        type: string
                        example: "5O190127TN364715T"
                      amount:
                        type: string
                        example: "279.97"
                      createTime:
                        type: string
                        format: date-time
                        example: "2025-09-22T10:30:00Z"
                      updateTime:
                        type: string
                        format: date-time
                        example: "2025-09-22T10:35:00Z"
        '400':
          description: Error al verificar la orden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: No autorizado
        '403':
          description: Acceso denegado - Se requieren permisos de administrador
        '500':
          description: Error interno del servidor

  /pagos/admin/capturar-orden/{orderId}:
    post:
      tags: [Administración, Pagos]
      summary: Capturar pago de PayPal (Admin)
      description: Captura manualmente un pago de PayPal para una orden pendiente y actualiza el stock automáticamente (solo administradores)
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Pago capturado exitosamente y stock actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Pago procesado correctamente y stock actualizado
                  data:
                    type: object
                    properties:
                      orderId:
                        type: integer
                        example: 1
                      transactionId:
                        type: string
                        example: "3C679123HH456789A"
                      status:
                        type: string
                        example: "completed"
                      amount:
                        type: number
                        format: float
                        example: 279.97
        '400':
          description: Error al capturar el pago o orden ya completada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Esta orden ya ha sido completada previamente
        '404':
          description: Orden no encontrada
        '401':
          description: No autorizado
        '403':
          description: Acceso denegado - Se requieren permisos de administrador
        '500':
          description: Error interno del servidor

  /pagos/admin/aprobar-manual/{orderId}:
    post:
      tags: [Administración, Pagos]
      summary: Aprobar orden manualmente (Admin)
      description: Aprueba manualmente una orden sin usar PayPal y actualiza el stock automáticamente (solo administradores)
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  example: "Pago recibido en efectivo"
      responses:
        '200':
          description: Orden aprobada manualmente exitosamente y stock actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Orden aprobada manualmente y stock actualizado
                  data:
                    type: object
                    properties:
                      orderId:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: "completed"
                      amount:
                        type: number
                        format: float
                        example: 279.97
        '400':
          description: Error al aprobar la orden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Orden no encontrada
        '401':
          description: No autorizado
        '403':
          description: Acceso denegado - Se requieren permisos de administrador
        '500':
          description: Error interno del servidor

  # =============================================
  # ENDPOINTS DE PREFERENCIAS
  # =============================================

  /preferencias:
    get:
      tags: [Preferencias]
      summary: Obtener preferencias del usuario
      description: Retorna las preferencias del usuario autenticado
      responses:
        '200':
          description: Preferencias obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PreferenciasUsuario'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'

    put:
      tags: [Preferencias]
      summary: Actualizar todas las preferencias del usuario
      description: Actualiza completamente las preferencias del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenciasInput'
      responses:
        '200':
          description: Preferencias actualizadas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PreferenciasUsuario'
                  message:
                    type: string
                    example: Preferencias actualizadas exitosamente
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationError'
        '401':
          description: No autorizado

  /preferencias/reset:
    post:
      tags: [Preferencias]
      summary: Restablecer preferencias por defecto
      description: Restablece todas las preferencias del usuario a los valores por defecto
      responses:
        '200':
          description: Preferencias restablecidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PreferenciasUsuario'
                  message:
                    type: string
                    example: Preferencias restablecidas a valores por defecto
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /preferencias/export:
    get:
      tags: [Preferencias]
      summary: Exportar preferencias del usuario
      description: Exporta las preferencias del usuario en formato JSON para backup
      responses:
        '200':
          description: Preferencias exportadas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 14
                      exportDate:
                        type: string
                        format: date-time
                        example: "2025-09-24T10:30:00Z"
                      preferences:
                        $ref: '#/components/schemas/PreferenciasUsuario'
                  message:
                    type: string
                    example: Preferencias exportadas exitosamente
        '401':
          description: No autorizado

  # =============================================
  # ENDPOINTS DE GEOLOCALIZACIÓN
  # =============================================

  /location/ubicacion:
    post:
      tags: [Geolocalización]
      summary: Actualizar ubicación del usuario
      description: Actualiza la ubicación actual del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UbicacionInput'
      responses:
        '200':
          description: Ubicación actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Ubicación actualizada exitosamente
                  data:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 19.432608
                      longitude:
                        type: number
                        format: float
                        example: -99.133209
                      timestamp:
                        type: string
                        format: date-time
                        example: "2025-09-24T10:30:00Z"
        '400':
          description: Error de validación
        '401':
          description: No autorizado

    delete:
      tags: [Geolocalización]
      summary: Eliminar datos de ubicación del usuario
      description: Elimina todos los datos de ubicación del usuario
      responses:
        '200':
          description: Datos de ubicación eliminados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Datos de ubicación eliminados exitosamente
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /location/mi-ubicacion:
    get:
      tags: [Geolocalización]
      summary: Obtener mi ubicación actual
      description: Retorna la ubicación actual del usuario autenticado
      responses:
        '200':
          description: Ubicación obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 19.432608
                      longitude:
                        type: number
                        format: float
                        example: -99.133209
                      lastUpdate:
                        type: string
                        format: date-time
                        example: "2025-09-24T10:30:00Z"
        '404':
          description: Ubicación no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: No se ha registrado ubicación para este usuario
        '401':
          description: No autorizado

  /location/estadisticas-ubicacion:
    get:
      tags: [Geolocalización, Administración]
      summary: Estadísticas de ubicación (Admin)
      description: Obtiene estadísticas generales de ubicación de usuarios (solo administradores)
      responses:
        '200':
          description: Estadísticas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalUsuariosConUbicacion:
                        type: integer
                        example: 25
                      usuariosActivos24h:
                        type: integer
                        example: 15
                      promedioActualizacionesDiarias:
                        type: number
                        format: float
                        example: 8.5
                      regiones:
                        type: object
                        example:
                          "Ciudad de México": 10
                          "Guadalajara": 8
                          "Monterrey": 7
        '401':
          description: No autorizado
        '403':
          description: Acceso denegado - Se requieren permisos de administrador

  # =============================================
  # ENDPOINTS DE BIOMETRÍA
  # =============================================

  /biometric/setup-pin:
    post:
      tags: [Biometría]
      summary: Configurar PIN biométrico
      description: Configura un PIN de 6 dígitos para autenticación biométrica
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PINSetupInput'
      responses:
        '201':
          description: PIN configurado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: PIN biométrico configurado exitosamente
        '400':
          description: Error de validación o PIN ya configurado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Ya tienes un PIN configurado
        '401':
          description: No autorizado

  /biometric/verify-pin:
    post:
      tags: [Biometría]
      summary: Verificar PIN biométrico
      description: Verifica el PIN del usuario y registra el intento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PINVerifyInput'
      responses:
        '200':
          description: PIN verificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: PIN verificado exitosamente
        '400':
          description: PIN incorrecto
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: PIN incorrecto
                  remainingAttempts:
                    type: integer
                    example: 2
        '423':
          description: PIN bloqueado por muchos intentos fallidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: PIN bloqueado. Demasiados intentos fallidos
                  blockedUntil:
                    type: string
                    format: date-time
                    example: "2025-09-24T11:30:00Z"
        '401':
          description: No autorizado

  /biometric/status:
    get:
      tags: [Biometría]
      summary: Obtener estado del PIN biométrico
      description: Retorna el estado actual del sistema biométrico del usuario
      responses:
        '200':
          description: Estado obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/BiometricStatus'
        '401':
          description: No autorizado

  /biometric/disable:
    post:
      tags: [Biometría]
      summary: Desactivar autenticación biométrica
      description: Desactiva y elimina la configuración biométrica del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPin
              properties:
                currentPin:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: "123456"
      responses:
        '200':
          description: Biometría desactivada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Autenticación biométrica desactivada exitosamente
        '400':
          description: PIN incorrecto
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: PIN actual incorrecto
        '401':
          description: No autorizado

  /biometric/change-pin:
    post:
      tags: [Biometría]
      summary: Cambiar PIN biométrico
      description: Cambia el PIN actual por uno nuevo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PINChangeInput'
      responses:
        '200':
          description: PIN cambiado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: PIN cambiado exitosamente
        '400':
          description: PIN actual incorrecto
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: PIN actual incorrecto
        '401':
          description: No autorizado

  /biometric/request-pin-reset:
    post:
      tags: [Biometría]
      summary: Solicitar restablecimiento de PIN (sin auth)
      description: Solicita un código de verificación para restablecer PIN bloqueado
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@email.com"
      responses:
        '200':
          description: Código de verificación enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Código de verificación enviado a tu email
                  resetId:
                    type: string
                    example: "reset_123456789"
        '404':
          description: Usuario no encontrado o PIN no configurado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado o no tiene PIN configurado

  /biometric/check-reset-status:
    post:
      tags: [Biometría]
      summary: Verificar estado del restablecimiento (sin auth)
      description: Verifica si un código de restablecimiento sigue activo
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resetId
              properties:
                resetId:
                  type: string
                  example: "reset_123456789"
      responses:
        '200':
          description: Estado del restablecimiento
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  isActive:
                    type: boolean
                    example: true
                  expiresAt:
                    type: string
                    format: date-time
                    example: "2025-09-24T11:30:00Z"

  /biometric/verify-code-only:
    post:
      tags: [Biometría]
      summary: Verificar solo el código de restablecimiento (sin auth)
      description: Verifica únicamente si el código de verificación es correcto
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resetId
                - verificationCode
              properties:
                resetId:
                  type: string
                  example: "reset_123456789"
                verificationCode:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: "654321"
      responses:
        '200':
          description: Código verificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Código verificado exitosamente
        '400':
          description: Código incorrecto
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Código de verificación incorrecto

  /biometric/reset-pin-final:
    post:
      tags: [Biometría]
      summary: Restablecer PIN final (sin auth)
      description: Restablece el PIN usando el código de verificación
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PINResetFinalInput'
      responses:
        '200':
          description: PIN restablecido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: PIN restablecido exitosamente
        '400':
          description: Error en el restablecimiento
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Código de verificación incorrecto o expirado

  # =============================================
  # ENDPOINTS DE INVENTARIO
  # =============================================

  /inventario:
    get:
      tags: [Inventario]
      summary: Obtener inventario completo
      description: Retorna la lista completa de productos con información de stock. Por defecto muestra solo productos activos.
      parameters:
        - name: activo
          in: query
          schema:
            type: string
            enum: ['true', 'false']
          description: Filtrar por estado activo/inactivo. Si no se proporciona, muestra solo activos (default true)
          example: 'true'
      responses:
        '200':
          description: Inventario obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductoInventario'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/low-stock:
    get:
      tags: [Inventario]
      summary: Obtener productos con stock bajo
      description: Retorna productos que tienen stock por debajo del mínimo establecido
      responses:
        '200':
          description: Productos con stock bajo obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductoInventario'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/dashboard:
    get:
      tags: [Inventario]
      summary: Obtener dashboard de inventario
      description: Retorna métricas y resumen del estado del inventario
      responses:
        '200':
          description: Dashboard obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      resumen:
                        type: object
                        properties:
                          total_productos:
                            type: integer
                            example: 25
                          productos_stock_bajo:
                            type: integer
                            example: 3
                          productos_sin_stock:
                            type: integer
                            example: 1
                          stock_promedio:
                            type: number
                            format: float
                            example: 45.2
                          valor_total_inventario:
                            type: number
                            format: float
                            example: 12500.75
                      lowStock:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductoInventario'
                      recentMovements:
                        type: array
                        items:
                          $ref: '#/components/schemas/MovimientoInventario'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/movements:
    get:
      tags: [Inventario]
      summary: Obtener historial de movimientos
      description: Retorna el historial de movimientos de inventario con filtros opcionales
      parameters:
        - name: tipo
          in: query
          schema:
            type: string
            enum: [entrada, salida]
          description: Filtrar por tipo de movimiento
        - name: id_producto
          in: query
          schema:
            type: integer
          description: Filtrar por ID de producto
        - name: fecha_desde
          in: query
          schema:
            type: string
            format: date
          description: Filtrar desde fecha (YYYY-MM-DD)
        - name: fecha_hasta
          in: query
          schema:
            type: string
            format: date
          description: Filtrar hasta fecha (YYYY-MM-DD)
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 500
          description: Límite de resultados
      responses:
        '200':
          description: Historial de movimientos obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MovimientoInventario'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/usuarios-movimientos:
    get:
      tags: [Inventario]
      summary: Obtener usuarios para movimientos
      description: Retorna lista de usuarios para usar en movimientos de salida
      responses:
        '200':
          description: Usuarios obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: "Juan Pérez"
                        email:
                          type: string
                          example: "juan@email.com"
                        rol:
                          type: string
                          example: "usuario"
                        display_text:
                          type: string
                          example: "Juan Pérez (juan@email.com) - usuario"
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/proveedores:
    get:
      tags: [Inventario]
      summary: Obtener lista de proveedores
      description: Retorna todos los proveedores activos del sistema
      responses:
        '200':
          description: Proveedores obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Proveedor'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

    post:
      tags: [Inventario]
      summary: Crear nuevo proveedor
      description: Crea un nuevo proveedor en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProveedorInput'
      responses:
        '201':
          description: Proveedor creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Proveedor'
                  message:
                    type: string
                    example: Proveedor creado exitosamente
        '400':
          description: Error de validación
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/entries:
    post:
      tags: [Inventario]
      summary: Registrar entrada de inventario
      description: Registra una entrada de productos al inventario (compra/reabastecimiento)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoEntradaInput'
      responses:
        '200':
          description: Entrada registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MovimientoInventario'
                  message:
                    type: string
                    example: Entrada registrada exitosamente
        '400':
          description: Error en los datos de entrada
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/exits:
    post:
      tags: [Inventario]
      summary: Registrar salida de inventario
      description: Registra una salida de productos del inventario (venta/consumo)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoSalidaInput'
      responses:
        '200':
          description: Salida registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MovimientoInventario'
                  message:
                    type: string
                    example: Salida registrada exitosamente
        '400':
          description: Error en los datos de salida o stock insuficiente
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/products:
    post:
      tags: [Inventario]
      summary: Crear nuevo producto
      description: Crea un nuevo producto en el sistema de inventario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoCreateInput'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductoInventario'
                  message:
                    type: string
                    example: Producto creado exitosamente
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationError'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/products/{id}:
    put:
      tags: [Inventario]
      summary: Actualizar producto
      description: Actualiza la información de un producto existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoUpdateInput'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductoInventario'
                  message:
                    type: string
                    example: Producto actualizado exitosamente
        '400':
          description: Error de validación
        '404':
          description: Producto no encontrado
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

    delete:
      tags: [Inventario]
      summary: Eliminar producto
      description: Elimina un producto del sistema (eliminación lógica)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Producto eliminado exitosamente
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /inventario/proveedores/{id}:
    put:
      tags: [Inventario]
      summary: Actualizar proveedor
      description: Actualiza la información de un proveedor existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProveedorInput'
      responses:
        '200':
          description: Proveedor actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Proveedor'
                  message:
                    type: string
                    example: Proveedor actualizado exitosamente
        '400':
          description: Error de validación
        '404':
          description: Proveedor no encontrado
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  # =============================================
  # ENDPOINTS DE REPORTES
  # =============================================

  /reportes/excel/inventario:
    get:
      tags: [Reportes]
      summary: Generar reporte de inventario en Excel
      description: Genera y descarga un reporte completo de inventario en formato Excel con múltiples hojas
      parameters:
        - name: incluir_stock_bajo
          in: query
          schema:
            type: boolean
            default: true
          description: Incluir sección de productos con stock bajo
        - name: incluir_metricas
          in: query
          schema:
            type: boolean
            default: true
          description: Incluir hoja de métricas y resumen
      responses:
        '200':
          description: Reporte de inventario en Excel generado exitosamente
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              example: 'attachment; filename="reporte_inventario_2024-01-15.xlsx"'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/excel/movimientos:
    get:
      tags: [Reportes]
      summary: Generar reporte de movimientos en Excel
      description: Genera reporte detallado de movimientos de inventario en Excel con resumen por día
      parameters:
        - name: fecha_inicio
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de inicio del período (YYYY-MM-DD)
        - name: fecha_fin
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de fin del período (YYYY-MM-DD)
      responses:
        '200':
          description: Reporte de movimientos en Excel generado exitosamente
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              example: 'attachment; filename="reporte_movimientos_2024-01-01_a_2024-01-15.xlsx"'
        '400':
          description: Fechas inválidas o faltantes
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/excel/productos-movidos:
    get:
      tags: [Reportes]
      summary: Generar reporte de productos más movidos en Excel
      description: Genera reporte de los productos con mayor actividad en movimientos
      parameters:
        - name: dias
          in: query
          schema:
            type: integer
            default: 30
            minimum: 1
            maximum: 365
          description: Período en días para el análisis
        - name: limite
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 50
          description: Límite de productos a incluir en el reporte
      responses:
        '200':
          description: Reporte de productos más movidos en Excel generado exitosamente
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              example: 'attachment; filename="reporte_productos_movidos_30dias.xlsx"'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/excel/completo:
    get:
      tags: [Reportes]
      summary: Generar reporte completo del sistema en Excel
      description: Genera un reporte completo que incluye inventario, movimientos y productos más movidos
      parameters:
        - name: fecha_inicio
          in: query
          schema:
            type: string
            format: date
          description: Fecha de inicio para movimientos (opcional)
        - name: fecha_fin
          in: query
          schema:
            type: string
            format: date
          description: Fecha de fin para movimientos (opcional)
        - name: dias
          in: query
          schema:
            type: integer
            default: 30
          description: Período en días para productos más movidos
      responses:
        '200':
          description: Reporte completo del sistema en Excel generado exitosamente
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              example: 'attachment; filename="reporte_completo_sistema_2024-01-15.xlsx"'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/categories:
    get:
      tags: [Reportes]
      summary: Reporte por categorías
      description: Retorna estadísticas de inventario agrupadas por categoría
      responses:
        '200':
          description: Reporte por categorías obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        categoria:
                          type: string
                          example: "Ropa"
                        cantidad_productos:
                          type: integer
                          example: 8
                        total_stock:
                          type: integer
                          example: 245
                        promedio_stock:
                          type: number
                          format: float
                          example: 30.6
                        valor_total:
                          type: number
                          format: float
                          example: 4895.75
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/movements-by-period:
    get:
      tags: [Reportes]
      summary: Reporte de movimientos por período
      description: Retorna estadísticas de movimientos agrupados por día y tipo
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de inicio (YYYY-MM-DD)
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de fin (YYYY-MM-DD)
      responses:
        '200':
          description: Reporte de movimientos obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        fecha_dia:
                          type: string
                          format: date
                          example: "2025-09-24"
                        tipo:
                          type: string
                          example: "entrada"
                        cantidad_movimientos:
                          type: integer
                          example: 5
                        total_unidades:
                          type: integer
                          example: 125
        '400':
          description: Fechas inválidas
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /reportes/top-products:
    get:
      tags: [Reportes]
      summary: Productos más movidos
      description: Retorna los productos con mayor actividad en movimientos
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            maximum: 50
          description: Límite de productos a retornar
        - name: days
          in: query
          schema:
            type: integer
            default: 30
          description: Período en días para el análisis
      responses:
        '200':
          description: Productos más movidos obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        codigo:
                          type: string
                          example: "CAM-001"
                        nombre:
                          type: string
                          example: "Camiseta Básica"
                        categoria:
                          type: string
                          example: "Ropa"
                        total_movimientos:
                          type: integer
                          example: 25
                        total_entradas:
                          type: integer
                          example: 150
                        total_salidas:
                          type: integer
                          example: 125
                        neto:
                          type: integer
                          example: 25
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

components:
  schemas:
    # Schemas de Autenticación
    RegisterInput:
      type: object
      required:
        - nombre
        - email
        - password
      properties:
        nombre:
          type: string
          example: Juan Pérez
        email:
          type: string
          format: email
          example: juan.perez@email.com
        password:
          type: string
          example: Password123
        rol:
          type: string
          example: usuario

    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: juan.perez@email.com
        password:
          type: string
          example: password123

    OTPVerifyInput:
      type: object
      required:
        - userId
        - otp
      properties:
        userId:
          type: integer
          example: 14
        otp:
          type: string
          example: "181669"

    ForgotPasswordInput:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: juan.perez@email.com

    ResetPasswordInput:
      type: object
      required:
        - token
        - password
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        password:
          type: string
          example: NuevaPassword123

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Autenticación exitosa
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            nombre:
              type: string
              example: Juan Pérez
            email:
              type: string
              example: juan.perez@email.com
            rol:
              type: string
              example: usuario

    # Schemas de Usuarios
    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Juan Pérez
        email:
          type: string
          format: email
          example: juan.perez@email.com
        rol:
          type: string
          example: administrador
        fecha_creacion:
          type: string
          format: date-time
          example: 2024-01-15T10:30:00.000Z
        current_latitude:
          type: number
          format: float
          example: 19.432608
        current_longitude:
          type: number
          format: float
          example: -99.133209

    UsuarioInput:
      type: object
      required:
        - nombre
        - email
        - password
        - rol
      properties:
        nombre:
          type: string
          example: Juan Pérez
        email:
          type: string
          format: email
          example: juan.perez@email.com
        password:
          type: string
          example: Password123
        rol:
          type: string
          example: administrador
        activo:
          type: boolean
          example: true

    # Schemas de Pagos
    Producto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Laptop Gaming"
        descripcion:
          type: string
          example: "Laptop para gaming de alta gama"
        precio:
          type: number
          format: float
          example: 999.99
        categoria:
          type: string
          example: "Tecnología"
        stock:
          type: integer
          example: 10
        imagen_url:
          type: string
          example: "https://example.com/images/laptop.jpg"
        activo:
          type: boolean
          example: true

    Orden:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 14
        total:
          type: number
          format: float
          example: 279.97
        estado:
          type: string
          enum: [pending, completed, cancelled, refunded, failed]
          example: "pending"
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: integer
                example: 1
              quantity:
                type: integer
                example: 2
              productName:
                type: string
                example: "Laptop Gaming"
              unitPrice:
                type: number
                format: float
                example: 139.99
        paypal_order_id:
          type: string
          example: "5O190127TN364715T"
        paypal_capture_id:
          type: string
          example: "3C679123HH456789A"
        fecha_creacion:
          type: string
          format: date-time
          example: "2025-09-22T10:30:00Z"
        fecha_completado:
          type: string
          format: date-time
          example: "2025-09-22T10:35:00Z"
        admin_notes:
          type: string
          example: "Aprobado manualmente por administrador"

    OrdenCompleta:
      allOf:
        - $ref: '#/components/schemas/Orden'
        - type: object
          properties:
            user_name:
              type: string
              example: "Juan Pérez"
            user_email:
              type: string
              format: email
              example: "juan.perez@email.com"
            transaction_status:
              type: string
              example: "completed"

    CrearOrdenInput:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: integer
                example: 1
              quantity:
                type: integer
                minimum: 1
                maximum: 999999
                example: 2

    ProductoCreateInput:
      type: object
      required:
        - codigo
        - nombre
        - categoria
        - unidad
        - stock_minimo
      properties:
        codigo:
          type: string
          example: "CAM-001"
          description: Código único del producto
        nombre:
          type: string
          example: "Camiseta Básica"
          description: Nombre del producto
        descripcion:
          type: string
          example: "Camiseta de algodón 100% en varios colores"
          description: Descripción detallada del producto
        categoria:
          type: string
          example: "Ropa"
          description: Categoría del producto
        unidad:
          type: string
          example: "unidad"
          description: Unidad de medida (unidad, kg, litro, etc.)
        stock_minimo:
          type: integer
          minimum: 0
          example: 10
          description: Stock mínimo requerido
        precio:
          type: number
          format: float
          minimum: 0
          example: 19.99
          description: Precio unitario del producto

    # Schemas para reportes Excel
    ExcelReportResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Reporte generado exitosamente"
        filename:
          type: string
          example: "reporte_inventario_2024-01-15.xlsx"
        generatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    # Agregar también estos schemas de ejemplo para los reportes
    ReporteInventarioEjemplo:
      type: object
      properties:
        hojas:
          type: array
          items:
            type: string
          example: ["Inventario General", "Stock Bajo", "Métricas"]
        columnas_principales:
          type: array
          items:
            type: string
          example: ["Código", "Nombre", "Categoría", "Stock Mínimo", "Stock Actual", "Estado", "Precio", "Valor Total"]

    ReporteMovimientosEjemplo:
      type: object
      properties:
        hojas:
          type: array
          items:
            type: string
          example: ["Movimientos", "Resumen por Día"]
        columnas_principales:
          type: array
          items:
            type: string
          example: ["Fecha", "Tipo", "Producto", "Cantidad", "Referencia", "Responsable", "Proveedor/Cliente"]

    # Schemas de Preferencias
    PreferenciasUsuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 14
        theme:
          type: string
          enum: [light, dark, auto]
          example: "dark"
        language:
          type: string
          example: "es"
        notifications:
          type: object
          properties:
            email:
              type: boolean
              example: true
            push:
              type: boolean
              example: false
            sms:
              type: boolean
              example: false
        privacy:
          type: object
          properties:
            showLocation:
              type: boolean
              example: false
            showOnlineStatus:
              type: boolean
              example: true
            allowContactByEmail:
              type: boolean
              example: true
        dashboard:
          type: object
          properties:
            layout:
              type: string
              enum: [grid, list, cards]
              example: "grid"
            itemsPerPage:
              type: integer
              minimum: 5
              maximum: 100
              example: 20
        created_at:
          type: string
          format: date-time
          example: "2025-09-24T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-09-24T10:35:00Z"

    PreferenciasInput:
      type: object
      properties:
        theme:
          type: string
          enum: [light, dark, auto]
          example: "dark"
        language:
          type: string
          example: "es"
        notifications:
          type: object
          properties:
            email:
              type: boolean
              example: true
            push:
              type: boolean
              example: false
            sms:
              type: boolean
              example: false
        privacy:
          type: object
          properties:
            showLocation:
              type: boolean
              example: false
            showOnlineStatus:
              type: boolean
              example: true
            allowContactByEmail:
              type: boolean
              example: true
        dashboard:
          type: object
          properties:
            layout:
              type: string
              enum: [grid, list, cards]
              example: "grid"
            itemsPerPage:
              type: integer
              minimum: 5
              maximum: 100
              example: 20

    PreferenciasEspecificas:
      type: object
      properties:
        key:
          type: string
          example: "theme"
        value:
          oneOf:
            - type: string
            - type: boolean
            - type: integer
            - type: object
          example: "dark"

    # Schemas de Geolocalización
    UbicacionInput:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: float
          example: 19.432608
        longitude:
          type: number
          format: float
          example: -99.133209

    # Schemas de Biometría
    PINSetupInput:
      type: object
      required:
        - pin
      properties:
        pin:
          type: string
          pattern: '^[0-9]{6}$'
          example: "123456"
        deviceInfo:
          type: string
          example: "iPhone 13 - iOS 16.2"

    PINVerifyInput:
      type: object
      required:
        - pin
      properties:
        pin:
          type: string
          pattern: '^[0-9]{6}$'
          example: "123456"

    PINChangeInput:
      type: object
      required:
        - currentPin
        - newPin
      properties:
        currentPin:
          type: string
          pattern: '^[0-9]{6}$'
          example: "123456"
        newPin:
          type: string
          pattern: '^[0-9]{6}$'
          example: "654321"

    PINResetFinalInput:
      type: object
      required:
        - resetId
        - verificationCode
        - newPin
      properties:
        resetId:
          type: string
          example: "reset_123456789"
        verificationCode:
          type: string
          pattern: '^[0-9]{6}$'
          example: "654321"
        newPin:
          type: string
          pattern: '^[0-9]{6}$'
          example: "111222"

    BiometricStatus:
      type: object
      properties:
        hasPIN:
          type: boolean
          example: true
        isBlocked:
          type: boolean
          example: false
        failedAttempts:
          type: integer
          example: 0
        maxAttempts:
          type: integer
          example: 3
        blockedUntil:
          type: string
          format: date-time
          nullable: true
          example: null
        lastSuccessfulLogin:
          type: string
          format: date-time
          nullable: true
          example: "2025-09-24T09:15:00Z"
        setupDate:
          type: string
          format: date-time
          example: "2025-09-20T14:30:00Z"

    # Schemas de Inventario
    ProductoInventario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        codigo:
          type: string
          example: "CAM-001"
        nombre:
          type: string
          example: "Camiseta Básica"
        descripcion:
          type: string
          example: "Camiseta de algodón 100% en varios colores"
        categoria:
          type: string
          example: "Ropa"
        unidad:
          type: string
          example: "unidad"
        stock_minimo:
          type: integer
          example: 10
        stock_actual:
          type: integer
          example: 65
        estado_stock:
          type: string
          enum: [NORMAL, STOCK BAJO, SIN STOCK]
          example: "NORMAL"
        precio:
          type: number
          format: float
          example: 19.99
        activo:
          type: boolean
          example: true

    MovimientoInventario:
      type: object
      properties:
        id_movimiento:
          type: integer
          example: 1
        fecha:
          type: string
          format: date-time
          example: "2025-09-24T10:30:00Z"
        tipo:
          type: string
          enum: [entrada, salida]
          example: "entrada"
        id_producto:
          type: integer
          example: 1
        producto_nombre:
          type: string
          example: "Camiseta Básica"
        codigo:
          type: string
          example: "CAM-001"
        cantidad:
          type: integer
          example: 25
        referencia:
          type: string
          example: "COMP-001"
        documento:
          type: string
          example: "FACT-12345"
        responsable:
          type: string
          example: "Ana Compras"
        proveedor_nombre:
          type: string
          example: "Textiles Modernos SA"
        usuario_nombre:
          type: string
          example: "Juan Pérez"
        usuario_email:
          type: string
          example: "juan@email.com"
        observaciones:
          type: string
          example: "Compra programada de camisetas"

    MovimientoEntradaInput:
      type: object
      required:
        - id_producto
        - cantidad
        - referencia
        - responsable
        - id_proveedor
      properties:
        id_producto:
          type: integer
          example: 1
        cantidad:
          type: integer
          minimum: 1
          example: 25
        referencia:
          type: string
          example: "COMP-001"
        documento:
          type: string
          example: "FACT-12345"
        responsable:
          type: string
          example: "Ana Compras"
        id_proveedor:
          type: integer
          example: 1
        observaciones:
          type: string
          example: "Compra programada de camisetas"

    MovimientoSalidaInput:
      type: object
      required:
        - id_producto
        - cantidad
        - referencia
        - responsable
        - id_usuario
      properties:
        id_producto:
          type: integer
          example: 1
        cantidad:
          type: integer
          minimum: 1
          example: 10
        referencia:
          type: string
          example: "VENT-001"
        documento:
          type: string
          example: "PED-67890"
        responsable:
          type: string
          example: "Carlos Ventas"
        id_usuario:
          type: integer
          example: 2
        observaciones:
          type: string
          example: "Venta a Tienda Fashion Center"

    Proveedor:
      type: object
      properties:
        id_proveedor:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Textiles Modernos SA"
        telefono:
          type: string
          example: "+1234567890"
        contacto:
          type: string
          example: "Juan Pérez"
        email:
          type: string
          format: email
          example: "juan@textilesmodernos.com"
        direccion:
          type: string
          example: "Calle Principal 123, Ciudad"
        activo:
          type: boolean
          example: true
        fecha_creacion:
          type: string
          format: date-time
          example: "2025-09-24T10:30:00Z"
        fecha_actualizacion:
          type: string
          format: date-time
          example: "2025-09-24T10:35:00Z"

    ProveedorInput:
      type: object
      required:
        - nombre
      properties:
        nombre:
          type: string
          example: "Textiles Modernos SA"
        telefono:
          type: string
          example: "+1234567890"
        contacto:
          type: string
          example: "Juan Pérez"
        email:
          type: string
          format: email
          example: "juan@textilesmodernos.com"
        direccion:
          type: string
          example: "Calle Principal 123, Ciudad"

    ProductoUpdateInput:
      type: object
      properties:
        codigo:
          type: string
          example: "CAM-001"
        nombre:
          type: string
          example: "Camiseta Básica Actualizada"
        descripcion:
          type: string
          example: "Camiseta de algodón premium"
        categoria:
          type: string
          example: "Ropa"
        unidad:
          type: string
          example: "unidad"
        stock_minimo:
          type: integer
          example: 15
        precio:
          type: number
          format: float
          example: 24.99

    # Nuevos schemas para validaciones
    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error de validación
        errors:
          type: array
          items:
            type: string
          example:
            - "El ID del producto es requerido para cada item"
            - "La cantidad debe ser un número válido"
            - "La cantidad debe ser mayor a 0"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error en la operación
        error:
          type: string
          example: Mensaje de error detallado

  responses:
    Unauthorized:
      description: No autorizado
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: No autorizado
              error:
                type: string
                example: Token inválido o expirado

    Forbidden:
      description: Acceso denegado
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Acceso denegado
              error:
                type: string
                example: Se requieren permisos de administrador

    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Recurso no encontrado
              error:
                type: string
                example: El usuario con ID 10 no existe

    ValidationError:
      description: Error de validación
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Error de validación
              errors:
                type: array
                items:
                  type: string
                example: 
                  - El email es obligatorio
                  - La contraseña debe tener al menos 6 caracteres

    ServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Error interno del servidor
              error:
                type: string
                example: Error de conexión con la base de datos

    ExcelReportError:
      description: Error al generar reporte Excel
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Error al generar el archivo Excel"
              details:
                type: string
                example: "No se pudo acceder a los datos de la base de datos"

    InvalidDateRange:
      description: Rango de fechas inválido
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Rango de fechas inválido"
              details:
                type: string
                example: "La fecha de inicio debe ser anterior a la fecha de fin"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtenido del endpoint /auth/login

security:
  - BearerAuth: []